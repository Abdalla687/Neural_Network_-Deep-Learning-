# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nHdSarAebmgcqvrvLhiVTUq-vUTRmx4u
"""

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay, accuracy_score
import numpy as np

iris = load_iris()
X = iris.data
y = iris.target

X_train, X_temp, y_train, y_temp = train_test_split(X, y, test_size=0.5, random_state=42)

X_val, X_test, y_val, y_test = train_test_split(X_temp,y_temp,test_size=0.6,random_state=42)
model=Sequential()
model.add(Dense(10, activation='sigmoid',input_dim=4))
model.add(Dense(3, activation='softmax'))

model.compile(optimizer=Adam(),loss='sparse_categorical_crossentropy')
history = model.fit(X_train,y_train, epochs = 500,verbose=0, validation_data=(X_val,y_val))

plt.plot(history.history['loss'], label='Training Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.show()

y_pred = model.predict(X_test)
y_pred_classes = np.argmax(y_pred, axis=1)
best_epoch = np.argmin(history.history['val_loss']) + 1
print(f"Best epoch: {best_epoch}")
conf_mat = confusion_matrix(y_test, y_pred_classes)
disp = ConfusionMatrixDisplay(conf_mat, display_labels=iris.target_names)
disp.plot(cmap='Blues')
plt.title("Confusion Matrix")
plt.savefig("confusion_matrix_plot.png", dpi=300)
plt.show()

accuracy = accuracy_score(y_test, y_pred_classes)
print(f"Test Accuracy: {accuracy:.2f}")